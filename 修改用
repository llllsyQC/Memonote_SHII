Sub 勤務時間_残業_稼働率_取込()

    Dim 年 As String, 月 As String, yyyymm As String
    年 = Trim(Sheets("都度対応項目(時間)").Range("I6").Value)
    月 = Trim(Sheets("都度対応項目(時間)").Range("I7").Value)
    yyyymm = 年 & 月

    Dim wbShift As Workbook, wbZangyo As Workbook
    Dim wsTarget As Worksheet
    Dim cell As Range
    Dim 総勤務時間 As Double, 合計工数 As Double, 稼働率 As Double
    Dim msgText As String

    Set wsTarget = ThisWorkbook.Sheets("都度対応項目(時間)")

    ' ==== 勤務割表をユーザーが選択 ====
    Dim filePathShift As String
    filePathShift = Application.GetOpenFilename("Excelファイル (*.xlsm), *.xlsm", , "【大宮】勤務割表を選択してください")

    If filePathShift = "False" Then
        MsgBox "勤務割表が選択されませんでした。", vbExclamation
        Exit Sub
    End If

        Set wbShift = Workbooks.Open(filePathShift)
    Dim rowNum As Long, colNum As Long
    Dim lastCol As Long
    Dim found As Boolean

    With wbShift.Sheets(1)
        lastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        For rowNum = 1 To .Cells(.Rows.Count, 1).End(xlUp).Row
            For colNum = 1 To lastCol
                If .Cells(rowNum, colNum).Value = "総勤務時間" Then
                    ' 从当前列开始向右找时间值
                    For i = colNum + 1 To lastCol
                        If IsDate(.Cells(rowNum, i).Value) Then
                            wsTarget.Range("H10").NumberFormat = "h:mm"
                            wsTarget.Range("H10").Value = .Cells(rowNum, i).Value
                            Exit For
                        End If
                    Next i
                ElseIf .Cells(rowNum, colNum).Value = "総平日日勤時間" Then
                    For i = colNum + 1 To lastCol
                        If IsDate(.Cells(rowNum, i).Value) Then
                            wsTarget.Range("H18").NumberFormat = "h:mm"
                            wsTarget.Range("H18").Value = .Cells(rowNum, i).Value
                            Exit For
                        End If
                    Next i
                End If
            Next colNum
        Next rowNum
    End With
    wbShift.Close False


    ' ==== 残業時間表をユーザーが選択 ====
    Dim filePathZan As String
    filePathZan = Application.GetOpenFilename("Excelファイル (*.xlsx), *.xlsx", , "残業時間管理表を選択してください")

    If filePathZan = "False" Then
        MsgBox "残業時間管理表が選択されませんでした。", vbExclamation
        Exit Sub
    End If

    Set wbZangyo = Workbooks.Open(filePathZan)
    With wbZangyo.Sheets(1)
        wsTarget.Range("H14").NumberFormat = "h:mm"
        wsTarget.Range("H14").Value = .Range("AL4").Value

        wsTarget.Range("H22").NumberFormat = "h:mm"
        wsTarget.Range("H22").Value = .Range("AO4").Value
    End With
    wbZangyo.Close False

    ' ==== 稼働率計算 ====
    合計工数 = GetMinutes(Application.WorksheetFunction.Sum(wsTarget.Range("EP11:EP64")))
    総勤務時間 = GetMinutes(wsTarget.Range("H10").Value)

    If 総勤務時間 > 0 Then
        稼働率 = 合計工数 / 総勤務時間
    Else
        稼働率 = 0
    End If

    msgText = "📊 稼働率 = " & Format(稼働率, "0.0%") & vbCrLf & _
              "・工数合計（EP11:EP64）: " & Format(合計工数 / 60, "0.0") & " 時間" & vbCrLf & _
              "・総勤務時間（H10）: " & Format(総勤務時間 / 60, "0.0") & " 時間"

    MsgBox msgText, vbInformation, "✅ 稼働率確認完了"

End Sub

Function GetMinutes(timeVal As Variant) As Double
    If IsDate(timeVal) Then
        GetMinutes = CDbl(timeVal) * 24 * 60
    Else
        GetMinutes = 0
    End If
End Function


Sub 工数集計_自動処理()

    On Error GoTo ERROR_HANDLER

    Dim 年 As String, 月 As String, yyyymm As String
    Dim checkResult As Boolean

    年 = InputBox("年を入力してください（例：2025）")
    月 = InputBox("月を入力してください（例：01）")

    If 年 = "" Or 月 = "" Then
        MsgBox "年と月の入力が必要です。", vbExclamation
        Exit Sub
    End If

    yyyymm = 年 & 月

    ' Step0：事前に必要なファイルが全て存在するか確認
    checkResult = Check_RequiredFilesExist(yyyymm)
    If checkResult = False Then
        MsgBox "必要なファイルのいずれかが見つかりません。処理を中止します。", vbCritical
        Exit Sub
    End If

    ' Step1〜3：実処理
    Call Import_AllSources(yyyymm, 年, 月)
    Call Copy_WorkHours_By工数番号(yyyymm, 年, 月)
    

    MsgBox "全ての処理が正常に完了しました！", vbInformation
    Exit Sub

ERROR_HANDLER:
    MsgBox "エラーが発生しました：" & Err.Description, vbCritical
End Sub

Function Check_RequiredFilesExist(yyyymm As String) As Boolean

    Dim pathBase As String
    Dim file1 As String, file2 As String, file3 As String
    Dim result As Boolean

    pathBase = "\\bbwcfs.local\share4\SBM1\SharePrj\大宮データセンター運用フォルダ\06.日報\06.50 定時_工数集計\202504工数ルール改定\マクロ修正中\工数データ提出用加工"

    file1 = Dir(pathBase & "\①工数集計_定時作業チェックシート_*" & yyyymm & "*.xlsx")
    file2 = Dir(pathBase & "\②工数集計_定時外_*" & yyyymm & "*.xlsx")
    file3 = Dir(pathBase & "\④工数集計_日報_*" & yyyymm & "*.xlsx")

    ' 三つのファイルが全て存在するかチェック
    If file1 <> "" And file2 <> "" And file3 <> "" Then
        Check_RequiredFilesExist = True
    Else
        Dim msg As String
        msg = "以下のファイルが見つかりません：" & vbCrLf
        If file1 = "" Then msg = msg & "①工数集計_定時作業チェックシート_" & yyyymm & vbCrLf
        If file2 = "" Then msg = msg & "②工数集計_定時外_" & yyyymm & vbCrLf
        If file3 = "" Then msg = msg & "④工数集計_日報_" & yyyymm & vbCrLf
        MsgBox msg, vbExclamation, "ファイル確認エラー"
        Check_RequiredFilesExist = False
    End If

End Function
