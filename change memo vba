'=========================
' 主程序：导入各源数据 → 生成月次工数集計シート → 调用工数取得Ver5.2及后续动作
'=========================
Sub 工数集計_自動処理()

    Dim 年 As String, 月 As String, yyyymm As String
    Dim filePath As String
    Dim savePath As String
    Dim fileName1 As String, fileName2 As String, fileName3 As String
    Dim wb1 As Workbook, wb2 As Workbook, wb3 As Workbook
    Dim wsMain As Workbook
    Dim wsSrc As Worksheet, wsDest As Worksheet
    Dim 工数map As Object
    Dim srcRow As Long, destRow As Long, cc As Long
    Dim 工数番号 As Variant

    ' 保存路径（均预设为桌面）
    savePath = "C:\Users\lis105\Desktop\"

    ' 输入年月
    年 = InputBox("対象の【年】を入力してください（例：2025）")
    月 = InputBox("対象の【月】を入力してください（例：04）")
    If 年 = "" Or 月 = "" Then
        MsgBox "年または月が未入力です。処理を中止します。", vbExclamation
        Exit Sub
    End If
    yyyymm = 年 & 月

    Set wsMain = ThisWorkbook
    filePath = wsMain.Path  ' 月次数据文件与本文件放在同一文件夹内

    '-------------------------------
    ' 【定時作業チェック】ファイルからデータコピー
    fileName1 = Dir(filePath & "\〇工数集計_定時作業チェックシート_" & yyyymm & ".xlsx")
    If fileName1 <> "" Then
        Set wb1 = Workbooks.Open(filePath & "\" & fileName1)
        With wb1.Worksheets("定時チェック")
            .Columns.Hidden = False
            .Rows.Hidden = False
            .Cells(1, 1).Select
        End With
        wb1.Worksheets("定時チェック").Range("M4:A49").Copy
        wsMain.Worksheets("定時チェック").Range("B3").PasteSpecial xlPasteValues
        wb1.Worksheets("定時チェック").Range("M51:A96").Copy
        wsMain.Worksheets("定時チェック").Range("B50").PasteSpecial xlPasteValues
        wb1.Close SaveChanges:=False
    End If

    '-------------------------------
    ' 【日報】ファイルからデータコピー
    fileName2 = Dir(filePath & "\〇工数集計_日報_" & "*.xlsx")
    If fileName2 <> "" Then
        Set wb2 = Workbooks.Open(filePath & "\" & fileName2)
        wb2.Worksheets("日報").Range("F4:LC53").Copy
        wsMain.Worksheets("日報").Range("F7").PasteSpecial xlPasteValues
        wb2.Close SaveChanges:=False
    End If

    '-------------------------------
    ' 【定時外】ファイルからデータコピー
    fileName3 = Dir(filePath & "\〇工数集計_定時外_" & yyyymm & ".xlsx")
    If fileName3 <> "" Then
        Set wb3 = Workbooks.Open(filePath & "\" & fileName3)
        wb3.Worksheets("定時外").Range("F4:B50").Copy
        wsMain.Worksheets("定時外").Range("F7").PasteSpecial xlPasteValues
        wb3.Close SaveChanges:=False
    End If

    '-------------------------------
    ' 「工数取得-都度対応項目(時間)」シートに年月設定
    With wsMain.Worksheets("工数取得-都度対応項目(時間)")
        .Range("I5").Value = 年
        .Range("I8").Value = 月
    End With

    '-------------------------------
    ' 工数番号でマッピングし、0消し(最終)シートのデータを貼り付け（h:mm形式を維持）
    Set 工数map = CreateObject("Scripting.Dictionary")
    Set wsDest = wsMain.Worksheets("工数取得-都度対応項目(時間)")
    For destRow = 2 To 100
        工数番号 = wsDest.Cells(destRow, "E").Value
        If Not 工数map.exists(工数番号) And 工数番号 <> "" Then
            工数map.Add 工数番号, destRow
        End If
    Next

    Set wsSrc = wsMain.Worksheets("0消し(最終)")
    For srcRow = 2 To 100
        工数番号 = wsSrc.Cells(srcRow, "E").Value
        If 工数map.exists(工数番号) Then
            destRow = 工数map(工数番号)
            For cc = 6 To 26  ' 列F～列Z（6～26）
                With wsDest.Cells(destRow, cc)
                    .NumberFormat = "h:mm"
                    .Value = wsSrc.Cells(srcRow, cc).Value
                End With
            Next cc
        End If
    Next

    '-------------------------------
    ' 月次工数集計シートの保存（例：月次工数集計シートYYYYMM.xlsm）
    Application.DisplayAlerts = False
    wsMain.SaveAs Filename:=savePath & "月次工数集計シート" & yyyymm & ".xlsm", _
                   FileFormat:=xlOpenXMLWorkbookMacroEnabled
    Application.DisplayAlerts = True
    MsgBox "月次工数集計シートを保存しました：" & yyyymm, vbInformation

    '-------------------------------
    ' 次に、工数取得Ver5.2への転送処理へ
    Call CopyTo_Ver52(yyyymm, 年, 月)

End Sub

'=========================
' 工数取得Ver5.2への転送処理＋【OJT確認】分岐
'=========================
Sub CopyTo_Ver52(yyyymm As String, 年 As String, 月 As String)

    Dim wbTarget As Workbook
    Dim wbSource As Workbook
    Dim wsSource As Worksheet, wsTarget As Worksheet
    Dim rngSource As Range, rngTarget As Range
    Dim filePath As String
    Dim mainFileName As String
    Dim r As Long, c As Long
    Dim saveName As String
    Dim answer As VbMsgBoxResult

    ' 固定路径下打开工数取得Ver5.2.xlsx
    Set wbTarget = Workbooks.Open("C:\Users\lis105\Desktop\工数取得Ver5.2.xlsx")
    Set wsTarget = wbTarget.Worksheets("都度対応項目(時間)")

    ' I6とI7に年月設定
    wsTarget.Range("I6").ClearContents
    wsTarget.Range("I7").ClearContents
    wsTarget.Range("I6").Value = 年
    wsTarget.Range("I7").Value = 月

    ' 月次工数集計シートからデータ（O11:EH64）を取得して貼付（O13:EH63、h:mm保持）
    mainFileName = "月次工数集計シート" & yyyymm & ".xlsm"
    filePath = "C:\Users\lis105\Desktop\" & mainFileName

    If Dir(filePath) = "" Then
        MsgBox "月次工数集計ファイルが見つかりません：" & vbCrLf & filePath, vbCritical
        Exit Sub
    End If

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False

    Set wbSource = Workbooks.Open(filePath, ReadOnly:=True)
    Set wsSource = wbSource.Worksheets("工数取得-都度対応項目(時間)")

    Set rngSource = wsSource.Range("O11:EH64")
    Set rngTarget = wsTarget.Range("O13:EH63")

    For r = 1 To rngSource.Rows.Count
        For c = 1 To rngSource.Columns.Count
            With rngTarget.Cells(r, c)
                .NumberFormat = "h:mm"
                .Value = rngSource.Cells(r, c).Value
            End With
        Next c
    Next r

    wbSource.Close SaveChanges:=False

    '===============================
    ' 【OJT確認】弹窗：询问是否已有OJT员工将工数写入集体定時外作業工数中？
    ' Yes：提示用户请手工删减勤务时间，自行计算稼働率（后续不自动写入追加数据）
    ' No：自动调用追加过程，读取勤務割表・残業管理表数据，并计算稼働率
    '===============================
    answer = MsgBox("本有OJT社員は既に集団の定時外作業工数へ工数を入力済みでしょうか？" & vbCrLf & _
                      "【Yes】：手動で勤務時間の削減および稼働率を計算してください。" & vbCrLf & _
                      "【No】：システムが自動で勤務割表および残業管理表からデータを取得し、稼働率を計算します。", _
                      vbYesNo + vbQuestion, "OJT入力確認")

    If answer = vbNo Then
        ' 自動で勤務割表と残業管理表からデータ取得し、セルに書込み＆稼働率計算
        Call FillAdditionalData(yyyymm, 年, 月)
    Else
        MsgBox "手動調整を行ってください。", vbInformation, "確認"
    End If

    '===============================
    ' 最終的に名前を変更して保存する（例：工数取得ver.5.2（大宮）YYMM.xlsm）
    saveName = "工数取得ver.5.2（大宮）" & Mid(yyyymm, 3, 4) & ".xlsm"
    wbTarget.SaveAs Filename:="C:\Users\lis105\Desktop\" & saveName, _
                    FileFormat:=xlOpenXMLWorkbookMacroEnabled

    Application.DisplayAlerts = True
    Application.ScreenUpdating = True

    MsgBox "Ver5.2ファイルを保存しました：" & saveName, vbInformation

End Sub

'=========================
' 追加データの取得および稼働率計算処理
'【勤務割表】から「総勤務時間」→ H10，「総平日日勤時間」→ H18  
'【残業時間管理表】から AL4→ H14，AO4→ H22  
'その後、EP11:EP64 の合計から稼働率を算出し、確認ダイアログを表示
'=========================
Sub FillAdditionalData(yyyymm As String, 年 As String, 月 As String)

    Dim wbTarget As Workbook
    Dim wsTarget As Worksheet
    Dim wbSource1 As Workbook, wbSource2 As Workbook
    Dim cell As Range
    Dim path1 As String, path2 As String
    Dim fileName1 As String, file1Match As String
    Dim totalWorkTime As Double, totalEffort As Double, rate As Double
    Dim msgText As String

    Set wbTarget = ActiveWorkbook    ' 既に工数取得Ver5.2（大宮）ファイルが開いている前提
    Set wsTarget = wbTarget.Worksheets("都度対応項目(時間)")

    '----- 勤務割表から H10（総勤務時間）と H18（総平日日勤時間）を取得 -----
    path1 = "C:\Users\lis105\Desktop\"
    fileName1 = "【大宮】" & 年 & "年" & 月 & "月度勤務割表"
    file1Match = Dir(path1 & fileName1 & "*.xlsm")
    
    If file1Match <> "" Then
        Set wbSource1 = Workbooks.Open(path1 & file1Match)
        With wbSource1.Sheets(1)
            For Each cell In .UsedRange
                If cell.Value = "総勤務時間" Then
                    With wsTarget.Range("H10")
                        .NumberFormat = "h:mm"
                        .Value = cell.Offset(0, 1).Value
                    End With
                ElseIf cell.Value = "総平日日勤時間" Then
                    With wsTarget.Range("H18")
                        .NumberFormat = "h:mm"
                        .Value = cell.Offset(0, 1).Value
                    End With
                End If
            Next cell
        End With
        wbSource1.Close SaveChanges:=False
    Else
        MsgBox "勤務割表ファイルが見つかりません：" & fileName1, vbExclamation
    End If

    '----- 残業時間管理表から AL4→H14、AO4→H22 を取得 -----
    path2 = "C:\Users\lis105\Desktop\"
    If Dir(path2 & "残業時間管理表" & 年 & "年度.xlsx") <> "" Then
        Set wbSource2 = Workbooks.Open(path2 & "残業時間管理表" & 年 & "年度.xlsx")
        With wbSource2.Sheets(1)
            wsTarget.Range("H14").NumberFormat = "h:mm"
            wsTarget.Range("H14").Value = .Range("AL4").Value

            wsTarget.Range("H22").NumberFormat = "h:mm"
            wsTarget.Range("H22").Value = .Range("AO4").Value
        End With
        wbSource2.Close SaveChanges:=False
    Else
        MsgBox "残業時間管理表が見つかりません。", vbExclamation
    End If

    '----- 稼働率の計算（EP11:EP64 の合計 ÷ H10） -----
    totalWorkTime = GetMinutes(wsTarget.Range("H10").Value)
    totalEffort = GetMinutes(Application.WorksheetFunction.Sum(wsTarget.Range("EP11:EP64")))
    
    If totalWorkTime > 0 Then
        rate = totalEffort / totalWorkTime
    Else
        rate = 0
    End If

    msgText = "稼働率 = " & Format(rate, "0.0%") & vbCrLf & _
              "（EP11:EP64 合計 = " & Format(totalEffort / 60, "0.0") & " 時間 / 総勤務時間 H10 = " & Format(totalWorkTime / 60, "0.0") & " 時間）" & vbCrLf & vbCrLf & _
              "【了解】を押してください。"
              
    MsgBox msgText, vbInformation, "稼働率確認"

End Sub

'=========================
' 時間を分に変換する補助関数
'=========================
Function GetMinutes(timeVal As Variant) As Double
    If IsDate(timeVal) Then
        GetMinutes = CDbl(timeVal) * 24 * 60
    Else
        GetMinutes = 0
    End If
End Function