Sub 日報一括処理()

    Dim Wb1 As Workbook, Wb2 As Workbook
    Dim fileName As String, filePath As String
    Dim userDate As String, dateValue As String
    Dim wsSource As Worksheet, wsTarget As Worksheet
    Dim lastRow As Long, i As Long, j As Long
    Dim titleFound As Boolean
    Dim titleText As String
    Dim shiftType As String
    Dim timeValue As String
    Dim actualTime As Variant
    Dim categoryRow As Object
    Dim categoryNames As Variant
    Dim currentCategory As String
    Dim startRow As Long, endRow As Long
    Dim colStart As Long, colEnd As Long
    Dim targetLastRow As Long
    Dim isEmptyRow As Boolean, hasData As Boolean
    Dim c As Range

    ' ◆ ユーザーに日付を入力させる
    userDate = InputBox("日報の日付を入力してください (フォーマット: YYYYMMDD)", "日付入力")
    
    If userDate = "" Or Not IsNumeric(userDate) Or Len(userDate) <> 8 Then
        MsgBox "有効な日付を入力してください (フォーマット: YYYYMMDD)", vbExclamation, "エラー"
        Exit Sub
    End If

    dateValue = Right(userDate, 2)
    fileName = "大宮日報" & userDate & ".xlsx"
    filePath = "C:\Users\lis105\Desktop\06. 日報\" & fileName

    ' ◆ ファイルの存在を確認し、開く
    If Dir(filePath) = "" Then
        MsgBox "ファイルが見つかりません: " & fileName, vbCritical, "エラー"
        Exit Sub
    End If

    On Error Resume Next
    Workbooks(fileName).Close False
    On Error GoTo 0

    Set Wb2 = Workbooks.Open(filePath)
    
    On Error Resume Next
    Set wsSource = Wb2.Worksheets("日報")
    On Error GoTo 0

    If wsSource Is Nothing Then
        MsgBox "ワークシート『日報』が見つかりません。", vbCritical, "エラー"
        Wb2.Close False
        Exit Sub
    End If

    Set Wb1 = ThisWorkbook
    On Error Resume Next
    Set wsTarget = Wb1.Worksheets("日報転記")
    If wsTarget Is Nothing Then
        Set wsTarget = Wb1.Sheets.Add
        wsTarget.Name = "日報転記"
    End If
    On Error GoTo 0
    wsTarget.Cells.Clear

    ' ◆ データ転記
    lastRow = wsSource.Cells(wsSource.Rows.Count, "B").End(xlUp).Row
    wsSource.Rows("35:" & lastRow).Copy
    wsTarget.Range("A1").PasteSpecial Paste:=xlPasteValues
    Wb2.Close False

    lastRow = wsTarget.Cells(wsTarget.Rows.Count, "B").End(xlUp).Row
    wsTarget.Columns("B").NumberFormat = "@"

    ' ◆ タイトル識別＋シフト分類＋列コピー
    For i = 1 To lastRow
        titleFound = False
        titleText = Trim(Replace(Replace(wsTarget.Cells(i, 4).Value, vbCr, ""), vbLf, ""))
        
        If titleText Like "【*】*" Then
            titleFound = True
        End If

        If titleFound Then
            timeValue = Trim(CStr(wsTarget.Cells(i + 1, 2).Value))
            actualTime = 0

            If timeValue <> "" And IsNumeric(Replace(timeValue, ":", "")) Then
                On Error Resume Next
                actualTime = CDate(timeValue)
                On Error GoTo 0
            End If

            If actualTime = 0 Then
                shiftType = "不明"
            ElseIf actualTime >= 0.375 And actualTime < 0.7083 Then
                shiftType = "日"
            Else
                shiftType = "夜"
            End If

            wsTarget.Cells(i, 39).Value = shiftType
            wsTarget.Range(wsTarget.Cells(i, 4), wsTarget.Cells(i, 38)).Copy
            wsTarget.Cells(i, 40).PasteSpecial Paste:=xlPasteValues
        End If
    Next i

    ' ◆ 不要な列を削除
    wsTarget.Range("AO:BG").Delete Shift:=xlToLeft

    ' ◆ カテゴリ分類処理
    categoryNames = Array("顧客対応", "障害対応", "その他", "KIX11業務")
    Set categoryRow = CreateObject("Scripting.Dictionary")
    
    For i = 1 To lastRow
        For j = LBound(categoryNames) To UBound(categoryNames)
            If wsSource.Cells(i, 2).Value = categoryNames(j) Then
                categoryRow(categoryNames(j)) = i
            End If
        Next j
    Next i

    For j = LBound(categoryNames) To UBound(categoryNames)
        currentCategory = categoryNames(j)
        
        If categoryRow.exists(currentCategory) Then
            startRow = categoryRow(currentCategory) + 1
            endRow = lastRow
            
            For i = startRow To lastRow
                If categoryRow.exists(wsSource.Cells(i, 2).Value) And wsSource.Cells(i, 2).Value <> "定期巡回" Then
                    endRow = i - 1
                    Exit For
                End If
            Next i
        Else
            startRow = 0
            endRow = 0
        End If

        Set wsTarget = GetOrCreateSheet(currentCategory)
        wsTarget.Cells.UnMerge

        If Application.WorksheetFunction.CountA(wsTarget.Range("A:A")) = 0 Then
            targetLastRow = 1
        Else
            targetLastRow = wsTarget.Cells(wsTarget.Rows.Count, "A").End(xlUp).Row
            If wsTarget.Cells(targetLastRow, 1).Value <> "" Then targetLastRow = targetLastRow + 1
        End If

        hasData = False
        colStart = 39
        
        If startRow > 0 And endRow >= startRow Then
            For i = startRow To endRow
                isEmptyRow = True
                For Each c In wsSource.Range(wsSource.Cells(i, colStart), wsSource.Cells(i, wsSource.Columns.Count).End(xlToLeft))
                    If Trim(c.Value) <> "" Then
                        isEmptyRow = False
                        Exit For
                    End If
                Next c

                If isEmptyRow Then GoTo SkipRow

                colEnd = wsSource.Cells(i, wsSource.Columns.Count).End(xlToLeft).Column
                If colEnd < colStart Then colEnd = colStart

                wsTarget.Cells(targetLastRow, 1).Value = dateValue
                wsSource.Range(wsSource.Cells(i, colStart), wsSource.Cells(i, colEnd)).Copy
                wsTarget.Cells(targetLastRow, 2).PasteSpecial Paste:=xlPasteValues
                targetLastRow = wsTarget.Cells(wsTarget.Rows.Count, "A").End(xlUp).Row + 1
                hasData = True
SkipRow:
            Next i
        End If

        If hasData = False Then
            wsTarget.Cells(targetLastRow, 1).Value = dateValue
            wsTarget.Cells(targetLastRow, 3).Value = "なし"
        End If
    Next j

    MsgBox "すべての処理が正常に完了しました！", vbInformation, "完了"

End Sub

' ◇ カテゴリシートがなければ作成する補助関数
Function GetOrCreateSheet(sheetName As String) As Worksheet
    On Error Resume Next
    Set GetOrCreateSheet = ThisWorkbook.Sheets(sheetName)
    If GetOrCreateSheet Is Nothing Then
        Set GetOrCreateSheet = ThisWorkbook.Sheets.Add
        GetOrCreateSheet.Name = sheetName
    End If
    On Error GoTo 0
End Function
